import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;

/**
 * Animal parent class
 * @author George Carlyle-Ive
 * @version 1 (17/03/2023)
 */
public class Animal {

    ArrayList<Owner> originalOwners;
    String aniName;
    int foodPerDay;

    /**
     * basic constructor
     */
    public Animal() {
        this("Unknown name", 0);
    }

    public Animal(String name, int meals) {
        aniName = name;
        foodPerDay = meals;

        originalOwners = new ArrayList<Owner>();
    }

    /**
     * returns the animals name
     * @return
     */
    public String getAniName() {
        return aniName;
    }

    /**
     * sets the animals name
     * @param NewAniName
     */
    public void setAniName(String NewAniName) {
        this.aniName = NewAniName;
    }

    /**
     * Returns a copy of the original owners
     *
     * @return A copy of the original owners as an array
     */
    public Owner[] getOriginalOwners() {
        Owner[] result = new Owner[originalOwners.size()];
        result = originalOwners.toArray(result);
        return result;
    }

    /**
     * To add an original owner
     *
     * @param o An original owner
     */
    public void addOriginalOwner(Owner o) {
        originalOwners.add(o);
    }

    /**
     * gets the number of meals per day
     * @return
     */
    public int getFoodPerDay() {
        return foodPerDay;
    }

    /**
     * sets the number of meals per day
     * @param food
     */
    public void setFoodPerDay(int food) {
        this.foodPerDay = food;
    }

    /**
     * Reads in information about the cat from the file
     */
    public void load(Scanner infile) {

        aniName = infile.next();
        int numOwners = infile.nextInt();
        originalOwners = new ArrayList<>();
        for (int oCount = 0; oCount < numOwners; oCount++) {
            String name = infile.next();
            String phone = infile.next();
            Owner owner = new Owner(name, phone);
            originalOwners.add(owner);
        }
        foodPerDay = infile.nextInt();
    }

    public void save(PrintWriter pw) {
        pw.println(aniName);
        pw.println(originalOwners.size());
        for (Owner o : originalOwners) {
            pw.println(o.getName());
            pw.println(o.getPhone());
        }
        pw.println(foodPerDay);
    }

    /**
     * Note that this only compares equality based on a
     * cat's name.
     *
     * @param obj the other cat to compare against.
     */
    @Override
    public boolean equals(Object obj) { // Generated by IDE to be more robust
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Animal other = (Animal) obj;
        if (aniName == null) {
            if (other.aniName != null)
                return false;
        } else if (!aniName.equals(other.aniName))
            return false;
        return true;
    }

    /**
     * A basic implementation to just return all the data in string form
     */
    @Override
    public String toString() {
        return "Animal name: " + aniName
                + "\nOriginal Owner(s) with phone: " + originalOwners
                + "\nFood per day: " + foodPerDay + " times\n";
    }
}
